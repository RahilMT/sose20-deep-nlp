# Final Project

We have five suggestions for topics and practical projects. We will provide datasets for each practical project. You can also choose your own topic and suggest a project or choose and existing topic and suggest your own project based on the topic. 

The first step is to decide on a group and pick a topic. You should also decide whether you'd like to complete a practical coding project or a literature review. One person from each group should email Miikka (miikka.silfverberg@helsinki.fi) and Hande (hande.chelikkanat@helsinki.fi) by Wednesday 27.2. to let us know what you decided. You should also send us a preliminary plan for how you will distribute the work among group members.

You have three weeks after 22.2. to complete your final project. The deadline is Friday 15.3. at 23:59. 

## POS Tagging (less challenging)

This project is based on the paper

  Plank et al. Multilingual Part-of-Speech Tagging with Bidirectional Long-Short Term Memory Models and Auxiliary Loss. ACL 2016

You should implement the BiLSTM tagging model described in the paper. If you want, you can skip the auxiliary loss part where the system predicts the frequency of input tokens. We'd like you to  present experiments for UD v1.2 treebanks for Finnish, English, German and Swedish. You can include additional languages if you want. If your results are not as good as the ones presented in the paper, try to figure out why this happens.

## Named-entity recognition (less challenging)

This project is based on the paper

    Lample et al. Neural Architectures for Named Entity Recognition. NAACL-HLT 2016.

For a practical project, you should implement a Bidirectional LSTM tagger (without the CRF layer described in the paper). You should compare your results on the CoNLL 2003 dataset to the results presented in the paper. If your system doesn't deliver as good performance as as the Lample et al. (2016) systems, try to figure out why that might be the case.

Link to CoNLL 2003 dataset: https://github.com/Franck-Dernoncourt/NeuroNER/tree/master/data/conll2003/en

## Word Inflection (moderately challenging)

This project is based on the paper

  Kann and Sch√ºtze. MED: The LMU System for the SIGMORPHON 2016 Shared Task on Morphological Reinflection. SIGMORPHON 2016.

Your task is to implement the encoder-decoder system for word inflection described in the paper. You should train your system on the Finnish, German and Navajo datasets from the 2016 SIGMORPHON shared task on word inflection which can be found here: https://github.com/ryancotterell/sigmorphon2016/tree/master/data/

## Embeddings (moderately challenging)

This project is based on the paper

  Bojanowski et al. Enriching Word Vectors with Subword Information. TACL 2017.

You should implement at least the negative sampling skipgram model for complete words described in Section 3.1. You can also train embeddings in some other way if you want if negative sampling skipgram feels too difficult (just let us know in advance what you'd like to do). You can also include subword information if you want. You can use UD v 1.2 treebanks for Finnish, Swedish, German and English to train your word embeddings. You can present qualitative evaluation which shows that your model groups together semantically related words. You can also evaluate on the semantic similarity datasets used by Bojanowski et al. (2017) for German and English (GUR65, GUR350, ZG222, WS353, RW). This is, however, not required.

## Image Captioning (more challenging)

This project is based on the paper

  Vinyals et al. Show and Tell: A Neural Image Caption Generator. CVPR 2015.


You should use one of the pretrained CNN image recognition models and the COCO dataset from torchvision: https://pytorch.org/docs/stable/torchvision/index.html On top of the recognition model, you should train an image captioning system which generates a caption sentence based on a representation vector computed by the CNN model.

## Instructions for Practical Project

Implement your project code in PyTorch. It is completely okay to simplify the project if you feel that it's a bit too much. However, if you do simplify your project let Hande and Miikka know about it.

In addition to the practical coding part, you should also prepare a short report with the following sections:
- Introduction
- Model
- Data
- Experiments
- Results
- Conclusions and Discussion

If you feel that you get stuck and are unable to understand something, don't hesitate to ask either on the course forum or on Slack. 

## Instructions for Literature Review

You should find three papers which are related to one of the suggested topics (one of them can be the paper we suggested as the basis for the practical project). It's a good idea to try to read the introductions, data and experiment sections quite thoroughly. Those can often give you an intuitive understanding of the model in the paper. If you feel that you get stuck and are unable to understand something, don't hesitate to ask either on the course forum or on Slack. 

Your summary paper should be 4 to 8 pages and include the following sections: Introduction, Models, Datasets, Experiments, Results, Discussion and Conclusions. If you work in a group, you can co-operate on writing but we'd like everyone to write the introduction independently.

- Intro (minimally 1 page)

Provide a nice overview of the task you are focusing on  (POS tagging, named entity recognition, ...) as well as the models that the papers presented. You should write about why the task is important and what kind of approaches have been available in the pre-deep learning era. Try to give a sense of progression from more straightforward models to increasingly refined models with improved results. 

Every group member should write their own introduction!
- Models

Describe the models presented in your papers. Put more emphasis on intuition than the mathematical formulas. 

- Datasets

Describe the datasets used for experiments in the papers.

- Experiments

Present the experiments and experimental setup described in the papers.

- Results

Summarize the results from the individual papers.

- Discussion and Conclusions

Discuss the model architectures and results presented in the papers. Try to find out which design choices contribute to improved performance.

# Schedule

- Wednesday 27.2. Decide groups and topic. Propose a practical project or a preliminary list of papers for a literature review (the list can change later). Present a plan for how the work is divided among group members. Email Miikka (miikka.silfverberg@helsinki.fi) and Hande (hande.celikkanat@helsinki.fi).
- Friday 15.3 at 23:59. Hand in report (PDF file) as well as project code. If you have both a PDF and py file, zip them before uploading to Moodle. 
